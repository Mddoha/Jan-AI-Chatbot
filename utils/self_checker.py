import time
import threading
from utils.logger import logger

class SelfChecker:
    def __init__(self, check_interval=120):
        self.check_interval = check_interval
        self.is_running = True
        self.thread = threading.Thread(target=self._run_check_loop)
        self.thread.daemon = True  # ржмржирзНржз ржирж╛ рж╣рзЯ ржХржЦржирзЛржЗ
        self.thread.start()

    def _run_check_loop(self):
        while self.is_running:
            try:
                self.perform_self_check()
            except Exception as e:
                logger.error(f"ЁЯдЦ Self-check error: {str(e)}")
            time.sleep(self.check_interval)

    def perform_self_check(self):
        # ржПржЦрж╛ржирзЗ ржнржмрж┐рж╖рзНржпрждрзЗ ржЖрж░ржУ ржЕржирзЗржХ ржЪрзЗржХ ржпрзБржХрзНржд ржХрж░рждрзЗ ржкрж╛рж░рзЛ
        logger.info("ЁЯза Performing self-check: рж╕ржм ржХрж┐ржЫрзБ рж╕ржЪрж▓ тЬЕ")

    def stop(self):
        self.is_running = False
        logger.warning("ЁЯЪл Self-checker manually stopped.")

# ржкрзНрж░рзЯрзЛржЧ ржХрж░рж╛рж░ рж╕ржорзЯ:
# from utils.self_checker import SelfChecker
# checker = SelfChecker(check_interval=300)  # ржкрзНрж░рждрж┐ рзл ржорж┐ржирж┐ржЯрзЗ ржирж┐ржЬрзЗржХрзЗ ржпрж╛ржЪрж╛ржЗ ржХрж░ржмрзЗ
